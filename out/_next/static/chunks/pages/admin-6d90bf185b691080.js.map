{"version":3,"file":"static/chunks/pages/admin-6d90bf185b691080.js","mappings":"oFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,SACA,WACA,OAAeC,EAAQ,KACvB,EACA,2FCAA,IAAMC,EAAW,GAAgC,GAAgB,CAC/D,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAAEC,MAAAA,CAAAA,CAAO,CAAGF,EACZ,CAAEG,KAAAA,CAAAA,CAAMC,gBAAAA,CAAAA,CAAiBC,iBAAAA,CAAAA,CAAkB,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,EAClD,GAAgBC,EAAMC,KAAK,EAEvBC,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,IAMjB,GALAC,EAAAA,SAAe,CAAC,IAAM,CACpBF,EAASG,CAAAA,EAAAA,EAAAA,EAAAA,IACX,EAAG,CAACH,EAAS,EAGTJ,EACF,OAAO,IAAI,CAIb,GAAIH,iBAAAA,GAA4BA,oBAAAA,EAC9B,IAAI,CAACE,EAEH,OADAJ,EAAOH,IAAI,CAAE,gBACN,IAAI,MAGb,GAAIO,EAEF,OADAJ,EAAOH,IAAI,CAAE,eACN,IAAI,OAIf,UAAIK,EACF,GACEF,EAAOH,IAAI,CAAE,eACN,IAAI,GAEXG,EAAOH,IAAI,CAAE,gBACN,IAAI,CACZ,CAGI,GAAAgB,EAAAC,GAAA,EAACC,EAAAA,CAAkB,GAAGC,CAAK,EAFjC,CAOHC,CAAAA,EAAA,EAAelB,oEC7Cf,IAAMmB,EAAsB,IACnB,GAAAL,EAAAC,GAAA,EAAAD,EAAAM,QAAA,IAGTF,CAAAA,EAAA,QAAelB,CAAAA,EAAAA,EAAAA,CAAAA,EAASmB,2GCNjB,IAAMR,EAAc,IAAMU,CAAAA,EAAAA,EAAAA,EAAAA,IACpBd,EAA+Ce,EAAAA,EAAWA","sources":["webpack://_N_E/?a37b","webpack://_N_E/./components/admin/withAuth.tsx","webpack://_N_E/./pages/admin/index.tsx","webpack://_N_E/./store/hooks.ts","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin\",\n      function () {\n        return require(\"private-next-pages/admin/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin\"])\n      });\n    }\n  ","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Router, { useRouter } from \"next/router\";\r\nimport { appSelector, appDispatch } from \"@/store/hooks\";\r\nimport { getSession } from \"@/features/admin/login\";\r\n\r\nconst withAuth = (WrappedComponent: React.FC) => (props: any) => {\r\n  const router = useRouter();\r\n  const { route } = router;\r\n  const { data, isAuthenticated, isAuthenticating } = appSelector(\r\n    (state: any) => state.login\r\n  );\r\n  const dispatch = appDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getSession());\r\n  }, [dispatch]);\r\n\r\n  // is fetching session (eg. show spinner)\r\n  if (isAuthenticating) {\r\n    return null;\r\n  }\r\n  // If user is not logged in, return login component\r\n\r\n  if (route !== \"/admin/login\" && route !== \"/admin/register\") {\r\n    if (!isAuthenticated) {\r\n      router.push(`/admin/login`);\r\n      return null;\r\n    }\r\n  } else {\r\n    if (isAuthenticated) {\r\n      router.push(`/admin/user`); // default page after login\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  if (route == \"/admin\") {\r\n    if (isAuthenticated) {\r\n      router.push(`/admin/user`);\r\n      return null;\r\n    }else{\r\n      router.push(`/admin/login`);\r\n      return null;\r\n    }\r\n  }\r\n  // If user is logged in, return original component\r\n  return <WrappedComponent {...props} />;\r\n\r\n  return null;\r\n};\r\n\r\nexport default withAuth;\r\n","import { useState } from \"react\";\r\nimport withAuth from \"@/components/admin/withAuth\";\r\nimport { appDispatch, appSelector } from \"@/store/hooks\";\r\nimport { decrement, increment, incrementByAmount } from \"@/features/counter\";\r\n\r\nconst IndexPage: React.FC = () => {\r\n  return <></>;\r\n};\r\n\r\nexport default withAuth(IndexPage);\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch, RootState } from \"@/store/store\";\r\n\r\nexport const appDispatch = () => useDispatch<AppDispatch>();\r\nexport const appSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"names":["window","__NEXT_P","push","__webpack_require__","withAuth","router","useRouter","route","data","isAuthenticated","isAuthenticating","appSelector","state","login","dispatch","appDispatch","React","getSession","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","WrappedComponent","props","__webpack_exports__","IndexPage","Fragment","useDispatch","useSelector"],"sourceRoot":""}